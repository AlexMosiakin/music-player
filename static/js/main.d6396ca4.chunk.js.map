{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","size","icon","faAngleLeft","onClick","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHope","uuidv4","audio","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6396ca4.chunk.js","sourcesContent":["import React, {} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faPlay, \r\n    faAngleLeft, \r\n    faAngleRight,\r\n    faPause,\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Player = ({\r\n    currentSong, \r\n    isPlaying, \r\n    setIsPlaying, \r\n    audioRef, \r\n    setSongInfo, \r\n    songInfo, \r\n    songs, \r\n    setCurrentSong,\r\n    setSongs\r\n}) => {\r\n    const activeLibraryHandler = (nextPrev) => {\r\n        const newSongs = songs.map((song) => {\r\n            if(song.id === nextPrev.id){\r\n                return{\r\n                    ...song,\r\n                    active:true,\r\n                }\r\n            }else{\r\n                return{\r\n                    ...song,\r\n                    active:false,\r\n                }\r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n    }\r\n    //Event Handlers\r\n    const playSongHandler = () => {\r\n        if(isPlaying){\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        }else{\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    };\r\n    const getTime = (time) => {\r\n        return(\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n    };\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({...songInfo, currentTime: e.target.value});\r\n    };\r\n    const skipTrackHandler = async (direction) => {\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n        if(direction === 'skip-forward'){\r\n            // setCurrentSong(songs[currentIndex + 1]);\r\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n        }\r\n        if(direction === 'skip-back'){\r\n            if((currentIndex - 1) % songs.length === -1){\r\n                await setCurrentSong(songs[songs.length - 1]);\r\n                activeLibraryHandler(songs[songs.length - 1]);\r\n                if(isPlaying) audioRef.current.play();\r\n                return;\r\n            }\r\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n        }\r\n        if(isPlaying) audioRef.current.play();\r\n    };\r\n    //Add the styles\r\n    const trackAnim = {\r\n        transform: `translateX(${songInfo.animationPercentage}%)`,\r\n    }\r\n    return(\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <div style={{background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`}} className=\"track\">\r\n                    <input \r\n                    min={0} \r\n                    max={songInfo.duration || 0} \r\n                    value={songInfo.currentTime} \r\n                    onChange={dragHandler}\r\n                    type=\"range\"\r\n                    />\r\n                    <div style={trackAnim} className=\"animate-track\"></div>\r\n                </div>\r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : '0:00'}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon \r\n                className=\"skip-back\" \r\n                size=\"2x\" \r\n                icon={faAngleLeft}\r\n                onClick={() => skipTrackHandler('skip-back')}\r\n                />\r\n                <FontAwesomeIcon \r\n                onClick={playSongHandler} \r\n                className=\"play\" \r\n                size=\"2x\" \r\n                icon={isPlaying ? faPause : faPlay} \r\n                />\r\n                <FontAwesomeIcon \r\n                className=\"skip-forward\" \r\n                size=\"2x\" \r\n                icon={faAngleRight} \r\n                onClick={() => skipTrackHandler('skip-forward')}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Player","import React from 'react';\r\n\r\nconst Song = ({currentSong, isPlaying}) => {\r\n    return(\r\n        <div className=\"song-container\">\r\n            <img className={`App ${isPlaying ? 'rotate-img' : \"\"}`} alt={currentSong.name} src={currentSong.cover}></img>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song","import React from 'react';\r\n\r\nconst LibrarySong = ({song, songs , setCurrentSong, id, audioRef, isPlaying, setSongs}) => {\r\n    const songSelectHandler = async () => {\r\n        // const selectedSong = songs.filter((state) => state.id === id);\r\n        await setCurrentSong(song);\r\n        //Add active state\r\n        const newSongs = songs.map((song) => {\r\n            if(song.id === id){\r\n                return{\r\n                    ...song,\r\n                    active:true,\r\n                }\r\n            }else{\r\n                return{\r\n                    ...song,\r\n                    active:false,\r\n                }\r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n        //Check if the song is playing\r\n        if(isPlaying) audioRef.current.play();\r\n    };\r\n    return(\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"}`}>\r\n            <img alt={song.name} src={song.cover}></img>\r\n            <div className=\"song-description\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong;","import React from 'react';\r\nimport LibrarySong from './LibrarySong'\r\n\r\n\r\nconst Library = ({songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) => {\r\n    return(\r\n        <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n               {songs.map((song) =>  (\r\n               <LibrarySong \r\n                songs={songs}\r\n                song={song}\r\n                setCurrentSong={setCurrentSong}\r\n                id={song.id}\r\n                key={song.id}\r\n                audioRef={audioRef}\r\n                isPlaying={isPlaying}\r\n                setSongs={setSongs}\r\n               />\r\n               ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library;","import React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faMusic} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({libraryStatus, setLibraryStatus}) => {\r\n    return(\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <button onClick={ () => setLibraryStatus(!libraryStatus) } >\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHope() {\r\n    return[\r\n        {\r\n            name: \"By Chance\",\r\n            artist: \"SwuM\",\r\n            cover:\"https://chillhop.com/wp-content/uploads/2021/03/74d62bc9370a68e440c1b98eaf650344f0a7faea-1024x1024.jpg\",\r\n            color: [\"#924F2D\",\"#CDA47B\"],\r\n            id: uuidv4(),\r\n            active: true,\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=15223\",\r\n        },\r\n        {\r\n            name: \"Roses n Flames\",\r\n            artist: \"C Y G N\",\r\n            cover:\"https://chillhop.com/wp-content/uploads/2021/02/d12927eedcc2f5afba2ab049a4a1ea46c2266ae3-1024x1024.jpg\",\r\n            color: [\"#F2B5FA\",\"#81B5E4\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=14984\",\r\n        },\r\n        {\r\n            name: \"Soul Samba\",\r\n            artist: \"Screen Jazzmaster, Zmeyev\",\r\n            cover:\"https://chillhop.com/wp-content/uploads/2021/03/630fbe3721ce9fa27e56b6b01c460f709fbce3b7-1024x1024.jpg\",\r\n            color: [\"#FBB334\",\"#F64830\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=16061\",\r\n        },\r\n    ];\r\n}\r\n\r\nexport default chillHope;","import React, {useState, useRef} from 'react';\n//Adding Components\nimport Player from './components/Player'\nimport Song from './components/Song'\nimport Library from './components/Library';\nimport Nav from './components/Nav';\n//Import styles\nimport \"./styles/app.scss\";\n//Import Util\nimport data from './data';\n\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //Calculate percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage: animation,\n      });\n  };\n  const songEndHandler = async () => {\n      let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      if(isPlaying) audioRef.current.play();\n  };\n  return (\n    <div className={`App ${libraryStatus ? 'library-active' : \"\"}`}>\n      <Nav \n      libraryStatus={libraryStatus}\n      setLibraryStatus={setLibraryStatus}\n      />\n      <Song \n      currentSong={currentSong}\n      isPlaying={isPlaying}\n       />\n      <Player \n      setIsPlaying={setIsPlaying}\n      isPlaying={isPlaying}\n      currentSong={currentSong} \n      audioRef={audioRef}\n      setSongInfo={setSongInfo}\n      songInfo={songInfo}\n      songs={songs}\n      setCurrentSong={setCurrentSong}\n      setSongs={setSongs}\n      />\n      <Library \n      songs={songs} \n      setCurrentSong={setCurrentSong}\n      audioRef={audioRef}\n      isPlaying={isPlaying}\n      setSongs={setSongs}\n      libraryStatus={libraryStatus}\n      />\n      <audio \n        onTimeUpdate={timeUpdateHandler} \n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef} \n        src={currentSong.audio}\n        onEnded={songEndHandler}\n        ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}